{"version":3,"sources":["utils/config.js","utils/near.js","components/Wallet.js","components/utils/Notification.js","components/tipme/AddAccount.js","utils/tipme.js","components/utils/Loader.js","components/tipme/TippedAccount.js","components/tipme/TippedAccounts.js","components/utils/Cover.js","assets/img/cover.png","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","text","NotificationError","DefaultProps","defaultProps","AddAccount","save","useState","name","setName","description","setDescription","show","setShow","handleClose","Button","style","width","class","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","e","value","placeholder","height","Footer","disabled","GAS","createAccount","tippedAccount","console","log","create","acc","getTippers","accountName","withdraw","accName","disable","activate","tip","message","to","Loader","role","TippedAccount","total_amount","active","owner","tipamount","setTipamount","setMessage","tippers","setTippers","loading","setLoading","useCallback","getTippersList","error","useEffect","Col","Card","Badge","bg","utils","format","Text","length","Table","borderless","map","_tipper","from","Row","xs","sm","lg","Group","parseNearAmount","TippedAccounts","accounts","setAccounts","getAccounts","saveAccount","data","then","resp","toast","tipAccount","disableAccount","activateAccount","withdrawAccount","_account","Cover","coverImg","background","minHeight","maxWidth","src","alt","App","balance","setBalance","getBalance","Container","fluid","Nav","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch"],"mappings":"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","file":"static/js/main.5e4d3c1d.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || \"tipme.ariesgun.testnet\";\n\nfunction environment(env) {\n  switch(env) {\n    case \"mainnet\":\n      return {\n        networkId: \"mainnet\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.near.org\",\n        helperUrl: \"https://helper.mainnet.near.org\",\n        explorerUrl: \"https://explorer.mainnet.near.org\",\n      };\n    case \"testnet\":\n      return {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n        explorerUrl: \"https://explorer.testnet.near.org\",\n      };\n    default:\n      throw Error(`Unknown environemnt '${env}'.`);\n  }\n}\n\nexport default environment;","import environment from \"./config\";\nimport { connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\n\nconst nearEnv = environment(\"testnet\");\n\nexport async function initializeContract() {\n  const near = await connect(\n    Object.assign(\n      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() }},\n      nearEnv\n    )\n  );\n  window.walletConnection = new WalletConnection(near);\n  window.accountId = window.walletConnection.getAccountId();\n  window.contract = new Contract(\n    window.walletConnection.account(),\n    nearEnv.contractName,\n    {\n      viewMethods: [\"getAccounts\", \"getTippers\"],\n      changeMethods: [\"create\", \"tip\", \"withdraw\", \"disable\", \"activate\", \"remove\"],\n    }\n  );\n}\n\nexport async function accountBalance() {\n  return formatNearAmount(\n    (await window.walletConnection.account().getAccountBalance()).total,\n    2\n  );\n}\n\nexport async function getAccountId() {\n  return window.walletConnection.getAccountId();\n}\n\nexport function login() {\n  window.walletConnection.requestSignIn(nearEnv.contractName);\n}\n\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}\n\n","import React from \"react\";\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\n\nconst Wallet = ({ address, amount, symbol, destroy }) => {\n  if (address) {\n    return (\n      <>\n        <Dropdown>\n          <Dropdown.Toggle\n            variant=\"light\"\n            align=\"end\"\n            id=\"dropdown-basic\"\n            className=\"d-flex align-items-center border rounded-pill py-1\"\n          >\n            {amount ? (\n              <>\n                {amount} <span className=\"ms-1\"> {symbol}</span>\n              </>\n            ) : (\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\n            )}\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu className=\"shadow-lg border-0\">\n            <Dropdown.Item\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\n              target=\"_blank\"\n            >\n              <Stack direction=\"horizontal\" gap={2}>\n                <i className=\"bi bi-person-circle fs-4\" />\n                <span className=\"font-monospace\">{address}</span>\n              </Stack>\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            <Dropdown.Item\n              as=\"button\"\n              className=\"d-flex align-items-center\"\n              onClick={() => {\n                destroy();\n              }}\n            >\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\n              Disconnect\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default Wallet;","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Notification = () => (\n  <ToastContainer\n    position=\"bottom-center\"\n    autoClose={5000}\n    hideProgressBar\n    newestOnTop\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nconst NotificationSuccess = ({ text }) => (\n  <div>\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst NotificationError = ({ text }) => (\n  <div>\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst Props = {\n  text: PropTypes.string,\n};\n\nconst DefaultProps = {\n  text: \"\",\n};\n\nNotificationSuccess.propTypes = Props;\nNotificationSuccess.defaultProps = DefaultProps;\n\nNotificationError.propTypes = Props;\nNotificationError.defaultProps = DefaultProps;\n\nexport { Notification, NotificationSuccess, NotificationError };","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\n\nconst AddAccount = ({ save }) => {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const isFormFilled = () => name && description;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button\n        onClick={handleShow}\n        variant=\"dark\"\n        className=\"rounded-pill px-0\"\n        style={{ width: \"38px\" }}\n      >\n        <i class=\"bi bi-plus\"></i>\n      </Button>\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>New Account</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <FloatingLabel\n              controlId=\"inputName\"\n              label=\"Account name\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                placeholder=\"Enter name of account\"\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputDescription\"\n              label=\"Description\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"description\"\n                style={{ height: \"80px\" }}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n          </Modal.Body>\n        </Form>\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"dark\"\n            disabled={!isFormFilled()}\n            onClick={() => {\n              save({\n                name,\n                description\n              });\n              handleClose();\n            }}\n          >\n            Create\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nAddAccount.propTypes = {\n  save: PropTypes.func.isRequired,\n};\n\nexport default AddAccount;","const GAS = 100000000000000; // 1 Tgas (14 decs)\n\n\nexport async function createAccount(tippedAccount) {\n  console.log(\"Tip \", tippedAccount);\n  return await window.contract.create({ acc: tippedAccount }, GAS);\n}\n\nexport function getAccounts() {\n  return window.contract.getAccounts();\n}\n\nexport async function getTippers({name}) {\n  return await window.contract.getTippers({ accountName: name });\n}\n\nexport async function withdraw({name}) {\n  return await window.contract.withdraw({accName: name}, GAS);\n}\n\nexport async function disable({name}) {\n  return await window.contract.disable({accName: name}, GAS);\n}\n\nexport async function activate({name}) {\n  return await window.contract.activate({accName: name}, GAS);\n}\n\nexport async function tip({name, amount, message}) {\n  console.log(\"Tip \", name);\n  console.log(\"Tip \", amount);\n  console.log(\"Tip \", message);\n  await window.contract.tip({to: name, amount: amount, message: message}, GAS, amount);\n}","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => (\n  <div className=\"d-flex justify-content-center\">\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  </div>\n);\n\nexport default Loader;","import React, { useCallback, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { utils } from \"near-api-js\";\nimport { Card, Button, Col, Badge, Stack, Row, Form, Table } from \"react-bootstrap\";\nimport { formatNearAmount, parseNearAmount } from \"near-api-js/lib/utils/format\";\nimport {\n  getTippers as getTippersList\n} from \"../../utils/tipme\";\nimport Loader from \"../utils/Loader\";\n\nconst TippedAccount = ({ account, withdraw, tip, disable, activate }) => {\n  const { name, description, total_amount, active, owner } =\n    account;\n\n  const [tipamount, setTipamount] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [tippers, setTippers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getTippers = useCallback(async () => {\n    try {\n      setLoading(true);\n      setTippers(await getTippersList({name}));      \n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setLoading(false);\n    }\n  });\n\n  const triggerTip = () => {\n    tip(name, parseNearAmount(tipamount + \"\"), message);\n  };\n\n  const triggerWithdraw = () => {\n    withdraw(name);\n  };\n\n  const triggerDisable = () => {\n    disable(name);\n  }\n\n  const triggerActivate = () => {\n    activate(name);\n  }\n\n  useEffect(() => {\n    getTippers();\n  }, []);\n\n  return (\n    <Col key={name}>\n      <Card className=\" h-100\">\n        <Card.Header>\n          <Stack direction=\"horizontal\" gap={2}>\n            <span className=\"font-monospace text-secondary\">{owner}</span>\n            { active ?\n              <Badge bg=\"success\" className=\"ms-right\">\n                Active\n              </Badge>\n              :\n              <Badge bg=\"danger\" className=\"ms-right\">\n                Inactive\n              </Badge>\n            }\n            <Badge bg=\"secondary\" className=\"ms-auto\">\n              {utils.format.formatNearAmount(total_amount)} NEAR\n            </Badge>\n          </Stack>\n        </Card.Header>\n        <Card.Body className=\"d-flex  flex-column text-center\">\n          <Card.Title>{name}</Card.Title>\n          <Card.Text className=\"flex-grow-1 \">{description}</Card.Text>\n          <hr />\n          {loading ? (<Loader />) : \n            tippers.length === 0 ? (<p>No Tipper yet!!!</p>) \n            :\n            (\n              <Table borderless>\n                <thead>\n                  <tr>\n                    <th>From</th>\n                    <th>Message</th>\n                    <th>Amount</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {tippers.map((_tipper) =>\n                      <tr>\n                        <td>{_tipper.from}</td>\n                        <td>{_tipper.message}</td>\n                        <td>{formatNearAmount(_tipper.amount)} NEAR</td>\n                      </tr>\n                  )}\n                </tbody>\n              </Table>\n            )}\n          <hr />\n          { (window.accountId === owner) ?\n              <Row xs={2} sm={2} lg={2} className=\"g-3 mt-2 mb-1 g-xl-4 g-xxl-5\">\n                <Col>\n                  <Button\n                    variant={utils.format.formatNearAmount(total_amount)===\"0\" ? \"outline-secondary\" : \"outline-success\"}\n                    onClick={triggerWithdraw}\n                    className=\"w-100 py-3\"\n                    disabled={utils.format.formatNearAmount(total_amount)===\"0\"}\n                  >\n                    Withdraw\n                  </Button>\n                </Col>\n                <Col>\n                  { active ? \n                    <Button\n                      variant=\"outline-danger\"\n                      onClick={triggerDisable}\n                      className=\"w-100 py-3\"\n                    >\n                      Disable\n                    </Button>\n                    :\n                    <Button\n                      variant=\"outline-danger\"\n                      onClick={triggerActivate}\n                      className=\"w-100 py-3\"\n                    >\n                      Activate\n                    </Button>\n                  }\n                  \n                </Col>\n              </Row>\n            :\n            <Row className=\"g-3 mt-2 mb-1 g-xl-4 g-xxl-5\">\n              <Col sm={12}>\n                <Form.Group controlId=\"formMessage\">\n                  <Form.Control className=\"py-3\" type=\"text\" \n                    onChange={(e) => {\n                      setMessage(e.target.value);\n                    }}\n                    placeholder=\"Message\"/>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form>\n                  <Form.Group controlId=\"formNearAmount\">\n                    <Form.Control className=\"py-3\" type=\"text\" \n                      onChange={(e) => {\n                        setTipamount(e.target.value);\n                      }}\n                      placeholder=\"NEAR Amount\"/>\n                  </Form.Group>\n                </Form>\n              </Col>\n              <Col>\n                <Button\n                  variant=\"outline-dark\"\n                  onClick={triggerTip}\n                  className=\"w-100 py-3\"\n                >\n                  Tip\n                </Button>\n              </Col>\n            </Row>\n          }\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nTippedAccount.propTypes = {\n  account: PropTypes.instanceOf(Object).isRequired,\n  withdraw: PropTypes.func.isRequired,\n  tip: PropTypes.func.isRequired,\n};\n\nexport default TippedAccount;","import React, { useEffect, useState, useCallback } from \"react\";\nimport { toast } from \"react-toastify\";\nimport AddAccount from \"./AddAccount\";\nimport TippedAccount from \"./TippedAccount\";\nimport Loader from \"../utils/Loader\";\nimport { Row } from \"react-bootstrap\";\nimport { NotificationSuccess, NotificationError } from \"../utils/Notification\";\nimport {\n  createAccount,\n  getAccounts as getAccountList,\n  tip as tipAccount,\n  withdraw as withdrawAccount,\n  disable as disableAccount,\n  activate as activateAccount,\n} from \"../../utils/tipme\";\n\nconst TippedAccounts = () => {\n  const [accounts, setAccounts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getAccounts = useCallback(async () => {\n    try {\n      setLoading(true);\n      setAccounts(await getAccountList());      \n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setLoading(false);\n    }\n  });\n\n  const saveAccount = async (data) => {\n    try {\n      setLoading(true);\n      createAccount(data).then((resp) => {\n        getAccounts();\n      });\n      toast(<NotificationSuccess text=\"Account added successfully.\" />);\n    } catch (error) {\n      console.log({ error });\n      toast(<NotificationError text=\"Failed to create an account.\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const tip = async (name, amount, message) => {\n    try {\n      await tipAccount({\n        name,\n        amount,\n        message\n      }).then((resp) => getAccounts());\n      toast(<NotificationSuccess text=\"Account tipped successfully\" />);\n    } catch (error) {\n      toast(<NotificationError text=\"Failed to give tip.\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const disable = async (name) => {\n    try {\n      await disableAccount({\n        name\n      }).then((resp) => getAccounts());\n      toast(<NotificationSuccess text=\"Account disabled successfully\" />);\n    } catch (error) {\n      toast(<NotificationError text=\"Failed to disable account.\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const activate = async (name) => {\n    try {\n      await activateAccount({\n        name\n      }).then((resp) => getAccounts());\n      toast(<NotificationSuccess text=\"Account activated successfully\" />);\n    } catch (error) {\n      toast(<NotificationError text=\"Failed to activate account.\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const withdraw = async (name) => {\n    try {\n      await withdrawAccount({\n        name\n      }).then((resp) => getAccounts());\n      toast(<NotificationSuccess text=\"Withdrawn successfully\" />);\n    } catch (error) {\n      console.log(error);\n      toast(<NotificationError text=\"Failed to wtihdraw tips.\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getAccounts();\n  }, []);\n\n  return (\n      <>\n        {!loading ? (\n          <>\n            <div className=\"d-flex justify-content-between align-items-center mb-4\">\n              <h1 className=\"fs-4 fw-bold mb-0\">List of Accounts</h1>\n              <AddAccount save={saveAccount} />\n            </div>\n            <Row xs={1} sm={1} lg={1} className=\"g-3 mb-5 g-xl-4 g-xxl-5\">\n              {accounts.map((_account) => {\n                return (\n                  <TippedAccount\n                    account={{\n                      ..._account,\n                    }}\n                    withdraw={withdraw}\n                    tip={tip}\n                    disable={disable}\n                    activate={activate}\n                  />\n                );\n                }\n              )}\n            </Row>\n          </>\n        ) : (\n          <Loader />\n        )}\n      </>\n    );\n  };\n\nexport default TippedAccounts;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\n\nconst Cover = ({ name, login, coverImg }) => {\n  if ((name, login, coverImg)) {\n    return (\n      <div\n        className=\"d-flex justify-content-center flex-column text-center \"\n        style={{ background: \"#fff\", minHeight: \"100vh\" }}\n      >\n        <div className=\"mt-auto mb-5\">\n          <div\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\n            style={{ maxWidth: \"320px\" }}\n          >\n            <img src={coverImg} alt=\"\" />\n          </div>\n          <h1>{name}</h1>\n          <p>Please connect your wallet to continue.</p>\n          <Button\n            onClick={login}\n            variant=\"dark\"\n            className=\"rounded-pill px-3 mt-3\"\n          >\n            Connect Wallet\n          </Button>\n        </div>\n        <p className=\"mt-auto text-secondary\">Powered by NEAR</p>\n      </div>\n    );\n  }\n  return null;\n};\nCover.propTypes = {\n  name: PropTypes.string, \n};\n\nCover.defaultProps = {\n  name: \"\",\n};\n\nexport default Cover;","export default __webpack_public_path__ + \"static/media/cover.3ed020af.png\";","import React, { useEffect, useCallback, useState } from \"react\";\nimport { Container, Nav } from \"react-bootstrap\";\nimport { login, logout as destroy, accountBalance } from \"./utils/near\";\nimport Wallet from \"./components/Wallet\";\nimport { Notification } from \"./components/utils/Notification\";\nimport TippedAccounts from \"./components/tipme/TippedAccounts\";\nimport Cover from \"./components/utils/Cover\";\nimport coverImg from \"./assets/img/cover.png\";\nimport \"./App.css\";\n\nconst App = function AppWrapper() {\n  const account = window.walletConnection.account();\n  const [balance, setBalance] = useState(\"0\");\n  const getBalance = useCallback(async() => {\n    if (account.accountId) {\n      setBalance(await accountBalance());\n    }\n  });\n\n  useEffect(() => {\n    getBalance();\n  }, [getBalance]);\n\n  return (\n    <>\n      <Notification />\n      { account.accountId ? (\n        <Container fluid=\"md\">\n          <Nav className=\"justify-content-end pt-3 pb-5\">\n            <Nav.Item>\n              <Wallet\n                address={account.accountId}\n                amount={balance}\n                symbol=\"NEAR\"\n                destroy={destroy}\n              />\n            </Nav.Item>\n          </Nav>\n          <main>\n            <TippedAccounts />\n          </main>\n        </Container>\n      ) : (\n        <Cover name=\"Tip Me\" login={login} coverImg={coverImg} />\n      )}\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initializeContract } from \"./utils/near\";\n\nimport \"bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch(console.error);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}